package sh.nkt.geheim.service;

import org.springframework.stereotype.Component;
import sh.nkt.geheim.domain.Note;
import sh.nkt.geheim.dto.NoteCreateRequestDto;
import sh.nkt.geheim.dto.NoteCreateResponseDto;
import sh.nkt.geheim.dto.NoteReadResponseDto;

import java.time.Instant;
import java.util.Base64;

/**
 * Mapper for converting between Note entities and DTOs.
 */
@Component
public class NoteMapper {

    public Note toEntity(NoteCreateRequestDto dto) {
        Instant now = Instant.now();
        return new Note(
                // this should be generated by the database, so we pass null here
                null,
                base64ToBytes(dto.ciphertext()),
                base64ToBytes(dto.iv()),
                base64ToBytes(dto.salt()),
                now.plusSeconds(dto.expiresInMinutes() * 60L),
                dto.maxReads(),
                now
        );
    }

    public NoteCreateResponseDto toCreateResponse(Note saved) {
        return new NoteCreateResponseDto(saved.id());
    }

    public NoteReadResponseDto toReadResponse(Note note) {
        return new NoteReadResponseDto(
                bytesToBase64(note.ciphertext()),
                bytesToBase64(note.iv()),
                bytesToBase64(note.salt()),
                note.expiresAt(),
                note.remainingReads()
        );
    }

    private static byte[] base64ToBytes(String base64) {
        return Base64.getDecoder().decode(base64);
    }

    private static String bytesToBase64(byte[] bytes) {
        return Base64.getEncoder().encodeToString(bytes);
    }
}
